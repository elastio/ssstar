[graph]
all-features = true

[advisories]
ignore  = []
version = 2

[bans]
deny = [
  # { crate = "git2", use-instead = "gix" },
]
multiple-versions = "deny"
skip = [
  { crate = "regex-syntax@0.6", reason = "tracing-subscriber is still using the older regex crate.  everything else has adopted the new version" },

  { crate = "crypto-bigint@0.4.9", reason = "one of the dependencies of `aws-sigv4 v 1.1.1` crate depends on this outdated version of crate" },
]
skip-tree = [
  { crate = "wasi@0.11.*", depth = 20, reason = "Old wasi crates are pulled in by getrandom, among others" },
  { crate = "getrandom@0.2", depth = 20, reason = "Transitive dep of older AWS SDK crates" },

  { crate = "rand@0.7.*", depth = 20, reason = "rand 0.7 used by again" },
  { crate = "rand_core@0.6.*", depth = 20, reason = "transitive dep of older AWS SDK crates" },

  { crate = "parking_lot@0.11.*", depth = 20, reason = "old parking-lot still used as transitive dep of `again`" },

  { crate = "windows-sys@0.52.*", depth = 20, reason = "mio" },

  { crate = "regex-automata@0.1.*", depth = 20, reason = "matchers (dep of tracing-subscriber)" },

  { crate = "http-body@0.4.*", depth = 20, reason = "multiple AWS crates" },

  { crate = "http-body@0.4.*", depth = 20, reason = "multiple AWS crates" },
  { crate = "http@0.2.*", depth = 20, reason = "multiple AWS crates" },

  { crate = "heck@0.4.*", depth = 20, reason = "snafu" },
]
wildcards = 'deny'

[sources]
unknown-git      = "deny"
unknown-registry = "deny"

[licenses]
allow = [
  "MIT",
  "Apache-2.0",
  "Apache-2.0 WITH LLVM-exception",
  "0BSD",
  "BSD-3-Clause",
  "ISC",
  "OpenSSL",
  "Unicode-3.0",
  "Zlib",
]
confidence-threshold = 0.80
exceptions = [
  # Use exceptions for these as they only have a single user
  # { allow = ["Zlib"], crate = "tinyvec" },
]

[[licenses.clarify]]
# The name of the crate the clarification applies to
name = "ring"
# The optional version constraint for the crate
version = "*"
# The SPDX expression for the license requirements of the crate
expression = "MIT AND ISC AND OpenSSL"
# One or more files in the crate's source used as the "source of truth" for
# the license expression. If the contents match, the clarification will be used
# when running the license check, otherwise the clarification will be ignored
# and the crate will be checked normally, which may produce warnings or errors
# depending on the rest of your configuration
license-files = [
  # Each entry is a crate relative path, and the (opaque) hash of its contents
  #{ path = "LICENSE", hash = 0xbd0eed23 }
  { path = "LICENSE", hash = 0xbd0eed23 },
]
